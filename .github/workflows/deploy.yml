name: Deploy to Vercel

on:
  push:
    branches: [ main ]  # Only deploy main to production
  pull_request:
    branches: [ main ]  # Deploy PR previews

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.13.1
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build project
      run: pnpm build
      
    - name: Deploy to Vercel (Production)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: amondnet/vercel-action@v25
      id: prod-deploy
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
    - name: Production Deployment Complete
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        echo "üöÄ Production deployment complete!"
        echo "üåê Live at: https://umai-tech.com"
        echo "üìã Vercel URL: ${{ steps.prod-deploy.outputs.preview-url }}"
        
    - name: Deploy to Vercel (PR Preview)
      if: github.event_name == 'pull_request'
      uses: amondnet/vercel-action@v25
      id: pr-deploy
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        
    - name: Comment Preview URL on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = '${{ steps.pr-deploy.outputs.preview-url }}';
          if (previewUrl) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Preview deployment ready!**
              
              ‚úÖ Preview: ${previewUrl}
              
              This preview will be automatically updated with new commits to this PR.`
            });
          }