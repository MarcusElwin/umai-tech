name: Deploy to Vercel

on:
  push:
    branches: [ '**' ]  # Deploy on push to any branch
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.13.1
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build project
      run: pnpm build
      
    - name: Deploy to Vercel (Production)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: vercel/action@v1
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
    - name: Deploy to Vercel (Feature Branch Preview)
      if: github.event_name == 'push' && github.ref != 'refs/heads/main'
      uses: vercel/action@v1
      id: feature-deploy
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        
    - name: Deploy to Vercel (PR Preview)
      if: github.event_name == 'pull_request'
      uses: vercel/action@v1
      id: pr-deploy
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        
    - name: Comment Feature Branch Deployment
      if: github.event_name == 'push' && github.ref != 'refs/heads/main'
      run: |
        echo "ðŸš€ Feature branch deployed!"
        echo "Branch: ${{ github.ref_name }}"
        echo "Preview URL: ${{ steps.feature-deploy.outputs.preview-url }}"
        
    - name: Comment Preview URL on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = '${{ steps.pr-deploy.outputs.preview-url }}';
          if (previewUrl) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Preview deployment ready!**
              
              âœ… Preview: ${previewUrl}
              
              This preview will be automatically updated with new commits to this PR.`
            });
          }