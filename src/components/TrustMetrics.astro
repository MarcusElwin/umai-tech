---
export interface Props {
  metrics: Array<{
    id: string;
    label: string;
    value: string;
    description: string;
    type: 'negative' | 'positive' | 'neutral';
    icon: string;
  }>;
}

const { metrics } = Astro.props;
---

<div class="bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 shadow-lg p-6 my-8">
  <div class="text-center mb-8">
    <h4 class="text-2xl font-bold text-gray-900 dark:text-white mb-3">The Trust Gap: Consumer Sentiment</h4>
    <p class="text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
      While AI agents demonstrate impressive capabilities, consumer adoption faces significant psychological barriers
    </p>
  </div>

  <div class="grid md:grid-cols-2 gap-6">
    {metrics.map((metric) => (
      <div class="relative overflow-hidden bg-gray-50 dark:bg-gray-700/50 rounded-xl p-6 hover:shadow-md transition-all duration-300">
        <!-- Background Pattern -->
        <div class="absolute inset-0 opacity-5">
          <div class="w-full h-full" 
               style="background-image: radial-gradient(circle at 2px 2px, currentColor 1px, transparent 0); background-size: 20px 20px; background-position: -10px -10px;">
          </div>
        </div>
        
        <div class="relative">
          <!-- Header -->
          <div class="flex items-start justify-between mb-4">
            <div class={`w-12 h-12 rounded-2xl flex items-center justify-center ${
              metric.type === 'negative' ? 'bg-red-100 dark:bg-red-900/20' :
              metric.type === 'positive' ? 'bg-green-100 dark:bg-green-900/20' :
              'bg-blue-100 dark:bg-blue-900/20'
            }`}>
              <svg class={`w-6 h-6 ${
                metric.type === 'negative' ? 'text-red-600 dark:text-red-400' :
                metric.type === 'positive' ? 'text-green-600 dark:text-green-400' :
                'text-blue-600 dark:text-blue-400'
              }`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                {metric.icon === 'warning' && (
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"/>
                )}
                {metric.icon === 'shield' && (
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
                )}
                {metric.icon === 'eye' && (
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                )}
                {metric.icon === 'user' && (
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>  
                )}
              </svg>
            </div>
            
            <div class={`text-4xl font-bold ${
              metric.type === 'negative' ? 'text-red-600 dark:text-red-400' :
              metric.type === 'positive' ? 'text-green-600 dark:text-green-400' :
              'text-blue-600 dark:text-blue-400'
            }`}>
              {metric.value}
            </div>
          </div>
          
          <!-- Content -->
          <h5 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">{metric.label}</h5>
          <p class="text-sm text-gray-600 dark:text-gray-400 leading-relaxed">{metric.description}</p>
        </div>
      </div>
    ))}
  </div>

  <!-- Trust Paradox Callout -->
  <div class="mt-8 bg-gradient-to-r from-amber-50 to-orange-50 dark:from-amber-900/10 dark:to-orange-900/10 border border-amber-200 dark:border-amber-800 rounded-xl p-6">
    <div class="flex items-start space-x-3">
      <div class="flex-shrink-0 w-6 h-6 rounded-full bg-amber-100 dark:bg-amber-900/20 flex items-center justify-center mt-1">
        <svg class="w-4 h-4 text-amber-600 dark:text-amber-400" fill="currentColor" viewBox="0 0 24 24">
          <path d="M13 10V3L4 14h7v7l9-11h-7z"/>
        </svg>
      </div>
      <div class="flex-1">
        <h6 class="text-sm font-semibold text-amber-900 dark:text-amber-200 mb-1">The Trust Paradox</h6>
        <p class="text-sm text-amber-800 dark:text-amber-300">
          While consumers don't trust AI agents with shopping, they unknowingly rely on AI for <strong>35% of Amazon purchases</strong> through recommendations. The challenge isn't capabilityâ€”it's perception.
        </p>
      </div>
    </div>
  </div>
</div>