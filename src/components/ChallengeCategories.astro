---
export interface Props {
  challenges: Array<{
    id: string;
    title: string;
    subtitle: string;
    severity: 'high' | 'medium' | 'low';
    icon: string;
    keyPoints: string[];
    impact: string;
    solution: string;
  }>;
}

const { challenges } = Astro.props;
---

<div class="my-12">
  <div class="text-center mb-12">
    <h3 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">Six Critical Challenge Areas</h3>
    <p class="text-lg text-gray-600 dark:text-gray-400 max-w-4xl mx-auto">
      Understanding these obstacles—and how pioneering companies are addressing them—is crucial for anyone building in this space.
    </p>
  </div>

  <div class="grid lg:grid-cols-2 gap-6">
    {challenges.map((challenge, index) => (
      <div class="relative">
        <!-- Challenge Card -->
        <div class="bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden">
          
          <!-- Severity Indicator -->
          <div class={`h-1.5 w-full ${
            challenge.severity === 'high' ? 'bg-red-500' :
            challenge.severity === 'medium' ? 'bg-amber-500' :
            'bg-green-500'
          }`}></div>
          
          <!-- Main Card Content (Always Visible) -->
          <div class="p-6 cursor-pointer" data-challenge={challenge.id}>
            <!-- Header -->
            <div class="flex items-start justify-between mb-4">
              <div class="flex items-start space-x-4 flex-1">
                <div class={`flex-shrink-0 w-12 h-12 rounded-2xl flex items-center justify-center ${
                  challenge.severity === 'high' ? 'bg-red-100 dark:bg-red-900/20' :
                  challenge.severity === 'medium' ? 'bg-amber-100 dark:bg-amber-900/20' :
                  'bg-green-100 dark:bg-green-900/20'
                }`}>
                  <svg class={`w-6 h-6 ${
                    challenge.severity === 'high' ? 'text-red-600 dark:text-red-400' :
                    challenge.severity === 'medium' ? 'text-amber-600 dark:text-amber-400' :
                    'text-green-600 dark:text-green-400'
                  }`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    {challenge.icon === 'trust' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"/>
                    )}
                    {challenge.icon === 'legal' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16l-3-9m3 9l3-9"/>
                    )}
                    {challenge.icon === 'technical' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                    )}
                    {challenge.icon === 'security' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.618 5.984A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
                    )}
                    {challenge.icon === 'market' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"/>
                    )}
                    {challenge.icon === 'ethics' && (
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    )}
                  </svg>
                </div>
                
                <div class="flex-1">
                  <div class="flex items-center space-x-2 mb-2">
                    <span class={`px-2 py-1 rounded-full text-xs font-medium ${
                      challenge.severity === 'high' ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-300' :
                      challenge.severity === 'medium' ? 'bg-amber-100 text-amber-800 dark:bg-amber-900/20 dark:text-amber-300' :
                      'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300'
                    }`}>
                      {challenge.severity.toUpperCase()} RISK
                    </span>
                    <span class="text-xs text-gray-500 dark:text-gray-400">#{index + 1}</span>
                  </div>
                  <h4 class="text-lg font-bold text-gray-900 dark:text-white mb-1">{challenge.title}</h4>
                  <p class="text-sm text-gray-600 dark:text-gray-400">{challenge.subtitle}</p>
                </div>
              </div>
              
              <button class="expand-button text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors ml-4" 
                      data-target={challenge.id}>
                <svg class="w-5 h-5 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"/>
                </svg>
              </button>
            </div>
          </div>

          <!-- Expandable Details -->
          <div class="expandable-content hidden border-t border-gray-200 dark:border-gray-700" id={`details-${challenge.id}`}>
            <div class="p-6">
              <!-- Key Points -->
              <div class="mb-6">
                <h5 class="text-sm font-semibold text-gray-900 dark:text-white mb-3">Key Issues:</h5>
                <ul class="space-y-2">
                  {challenge.keyPoints.map((point) => (
                    <li class="flex items-start space-x-2">
                      <div class="flex-shrink-0 w-1.5 h-1.5 bg-gray-400 dark:bg-gray-500 rounded-full mt-2"></div>
                      <span class="text-sm text-gray-700 dark:text-gray-300">{point}</span>
                    </li>
                  ))}
                </ul>
              </div>

              <!-- Impact -->
              <div class="mb-6 p-4 bg-gray-50 dark:bg-gray-700/50 rounded-xl">
                <h6 class="text-xs font-semibold text-gray-900 dark:text-white mb-2 uppercase tracking-wide">Business Impact</h6>
                <p class="text-sm text-gray-700 dark:text-gray-300">{challenge.impact}</p>
              </div>

              <!-- Solution -->
              <div class="p-4 bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/10 dark:to-indigo-900/10 border border-blue-200 dark:border-blue-800 rounded-xl">
                <div class="flex items-start space-x-2">
                  <svg class="w-4 h-4 text-blue-600 dark:text-blue-400 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"/>
                  </svg>
                  <div>
                    <h6 class="text-xs font-semibold text-blue-900 dark:text-blue-200 mb-1 uppercase tracking-wide">Solution Approach</h6>
                    <p class="text-sm text-blue-800 dark:text-blue-300">{challenge.solution}</p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>
</div>

<script>
  // Add click handlers for expandable challenge cards
  function initializeChallengeCards() {
    const expandButtons = document.querySelectorAll('.expand-button');
    const cardHeaders = document.querySelectorAll('[data-challenge]');
    
    function toggleCard(targetId: string) {
      const content = document.getElementById(`details-${targetId}`);
      const button = document.querySelector(`[data-target="${targetId}"]`);
      const svg = button?.querySelector('svg');
      
      if (content && button && svg) {
        if (content.classList.contains('hidden')) {
          content.classList.remove('hidden');
          svg.style.transform = 'rotate(180deg)';
        } else {
          content.classList.add('hidden');
          svg.style.transform = 'rotate(0deg)';
        }
      }
    }
    
    expandButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.stopPropagation();
        const targetId = button.getAttribute('data-target');
        if (targetId) toggleCard(targetId);
      });
    });
    
    cardHeaders.forEach(header => {
      header.addEventListener('click', () => {
        const challengeId = header.getAttribute('data-challenge');
        if (challengeId) toggleCard(challengeId);
      });
    });
  }
  
  // Initialize on page load
  document.addEventListener('DOMContentLoaded', initializeChallengeCards);
  
  // Re-initialize if content is dynamically loaded
  if (typeof window !== 'undefined') {
    (window as any).initializeChallengeCards = initializeChallengeCards;
  }
</script>

<style>
  /* Smooth transitions for expand/collapse */
  .expandable-content {
    transition: all 0.3s ease-in-out;
  }
  
  .expand-button svg {
    transition: transform 0.2s ease-in-out;
  }
  
  /* Hover effects */
  [data-challenge]:hover {
    cursor: pointer;
  }
</style>