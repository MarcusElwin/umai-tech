---
export interface Props {
  type?: 'info' | 'warning' | 'error' | 'success' | 'note';
  title?: string;
}

const { type = 'info', title } = Astro.props;

const typeStyles = {
  info: {
    container: 'bg-blue-50 border-blue-200 dark:bg-blue-950/20 dark:border-blue-800/30',
    icon: 'text-blue-600 dark:text-blue-400',
    title: 'text-blue-800 dark:text-blue-300',
    content: 'text-blue-700 dark:text-blue-200'
  },
  warning: {
    container: 'bg-amber-50 border-amber-200 dark:bg-amber-950/20 dark:border-amber-800/30',
    icon: 'text-amber-600 dark:text-amber-400',
    title: 'text-amber-800 dark:text-amber-300',
    content: 'text-amber-700 dark:text-amber-200'
  },
  error: {
    container: 'bg-red-50 border-red-200 dark:bg-red-950/20 dark:border-red-800/30',
    icon: 'text-red-600 dark:text-red-400',
    title: 'text-red-800 dark:text-red-300',
    content: 'text-red-700 dark:text-red-200'
  },
  success: {
    container: 'bg-green-50 border-green-200 dark:bg-green-950/20 dark:border-green-800/30',
    icon: 'text-green-600 dark:text-green-400',
    title: 'text-green-800 dark:text-green-300',
    content: 'text-green-700 dark:text-green-200'
  },
  note: {
    container: 'bg-umai-gray-50 border-umai-gray-200 dark:bg-umai-gray-900/20 dark:border-umai-gray-700/30',
    icon: 'text-umai-gray-600 dark:text-umai-gray-400',
    title: 'text-umai-gray-800 dark:text-umai-gray-300',
    content: 'text-umai-gray-700 dark:text-umai-gray-200'
  }
};

const icons = {
  info: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
  </svg>`,
  warning: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
  </svg>`,
  error: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
  </svg>`,
  success: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
  </svg>`,
  note: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h8a2 2 0 012 2v12a1 1 0 01-1.447.894L10 15.618l-4.553 1.276A1 1 0 014 16V4zm4.553 8.894L10 12.382l1.447.512A1 1 0 0013 12V6a1 1 0 10-2 0v4.382l-.553-.276a1 1 0 00-.894 0L9 10.618V6a1 1 0 10-2 0v6a1 1 0 001.553.894z" clip-rule="evenodd" />
  </svg>`
};

const styles = typeStyles[type];
---

<div class={`callout border-l-4 border rounded-lg p-4 my-6 ${styles.container}`}>
  <div class="flex">
    <div class={`flex-shrink-0 ${styles.icon}`}>
      <Fragment set:html={icons[type]} />
    </div>
    <div class="ml-3 flex-1">
      {title && (
        <h3 class={`text-sm font-medium ${styles.title} mb-2`}>
          {title}
        </h3>
      )}
      <div class={`text-sm ${styles.content} prose prose-sm max-w-none`}>
        <slot />
      </div>
    </div>
  </div>
</div>

<style>
  .callout :global(p:last-child) {
    @apply mb-0;
  }
  
  .callout :global(p:first-child) {
    @apply mt-0;
  }
</style>